import http.server
import requests


API_KEY = "Cy2hhB4CjnW9YfGUIRuM8eJD2ywoJH1SBWFqYHxWi45mcv79MUbHVrYA1XK%2BeAKvgo45fGbS2%2B68GnXROF6ipw%3D%3D"


class MyRequestHandler(http.server.BaseHTTPRequestHandler):
    def do_GET(self):
        # 요청 처리 로직을 구현합니다.
        if self.path == "/data":
            weather_data = get_weather_data()  # 날씨 데이터 가져오기 함수 호출
            processed_data = process_weather_data(weather_data)  # 날씨 데이터 가공 함수 호출
            self.send_response(200)
            self.send_header("Content-type", "application/json")
            self.end_headers()
            self.wfile.write(json.dumps(processed_data).encode())


# 날씨 데이터 가져오기 함수
def get_weather_data():
    base_url = "http://apis.data.go.kr/1360000/VilageFcstInfoService_2.0"
    endpoint = "/getVilageFcst"
    url = base_url + endpoint

    
    params = {
        "serviceKey": API_KEY,
        "numOfRows": 10,
        "pageNo": 1,
        "base_date": "20210628",
        "base_time": "0500",
        "nx": 55,
        "ny": 127
    }

    response = requests.get(url, params=params)
    if response.status_code == 200:
        data = response.json()
        return data

    return None

# 날씨 데이터 가공 함수
def process_weather_data(weather_data):
    # 날씨 데이터 가공 로직을 구현
    # 필요한 정보를 추출하여 필요한 형식으로 변환
    processed_data = []

    if weather_data:
        items = weather_data["response"]["body"]["items"]["item"]

        for item in items:
            date = item["baseDate"]
            weather = item["category"]
            hightemperature = item["fcstValue"]
            lowtemperature = item["fcstValue"]
            state = "Good"  # 날씨에 따라 상태를 결정하는 로직 

            processed_data.append({
                "date": date,
                "weather": weather,
                "hightemperature": hightemperature,
                "lowtemperature": lowtemperature,
                "state": state
            })

    return processed_data

if __name__ == "__main__":
    app.run()
